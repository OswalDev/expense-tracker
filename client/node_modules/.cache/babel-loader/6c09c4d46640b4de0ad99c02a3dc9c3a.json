{"ast":null,"code":"var _jsxFileName = \"E:\\\\Library\\\\DesarolloWeb\\\\Desarrollo Frontend\\\\Proyects\\\\ExpenseTracker\\\\expense-tracker\\\\client\\\\src\\\\components\\\\AddTransaction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AddTransaction = () => {\n  _s();\n\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState(0);\n  const {\n    reset\n  } = useForm();\n  const {\n    addTransaction\n  } = useContext(GlobalContext);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      text,\n      amount: +amount\n    };\n    addTransaction(newTransaction);\n    e.target.reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add new transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Enter text...(Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: [\"Amount \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 23\n          }, this), \"(negative - expense, positive - income)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          placeholder: \"Enter amount...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddTransaction, \"tnLtFHd+p2UCVjSu686ErcXUjKg=\", false, function () {\n  return [useForm];\n});\n\n_c = AddTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransaction\");","map":{"version":3,"sources":["E:/Library/DesarolloWeb/Desarrollo Frontend/Proyects/ExpenseTracker/expense-tracker/client/src/components/AddTransaction.js"],"names":["React","useState","useContext","GlobalContext","useForm","AddTransaction","text","setText","amount","setAmount","reset","addTransaction","onSubmit","e","preventDefault","newTransaction","id","Math","floor","random","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBN,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACO,MAAD,EAAQC,SAAR,IAAqBR,QAAQ,CAAC,CAAD,CAAnC;AACA,QAAM;AAAES,IAAAA;AAAF,MAAYN,OAAO,EAAzB;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAqBT,UAAU,CAACC,aAAD,CAArC;;AAEA,QAAMS,QAAQ,GAAGC,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,cAAc,GAAG;AACrBC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,SAA3B,CADiB;AAErBb,MAAAA,IAFqB;AAGrBE,MAAAA,MAAM,EAAE,CAACA;AAHY,KAAvB;AAMAG,IAAAA,cAAc,CAACI,cAAD,CAAd;AACAF,IAAAA,CAAC,CAACO,MAAF,CAASV,KAAT;AACC,GAXD;;AAaA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEE,QAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEN,IAA1B;AAAgC,UAAA,QAAQ,EAAGO,CAAD,IAAON,OAAO,CAACM,CAAC,CAACO,MAAF,CAASC,KAAV,CAAxD;AAA0E,UAAA,WAAW,EAAC;AAAtF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,QAAf;AAAA,6CACU;AAAA;AAAA;AAAA;AAAA,kBADV;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAEb,MAA5B;AAAoC,UAAA,QAAQ,EAAGK,CAAD,IAAOJ,SAAS,CAACI,CAAC,CAACO,MAAF,CAASC,KAAV,CAA9D;AAAgF,UAAA,WAAW,EAAC;AAA5F;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAYE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAmBH,CAvCM;;GAAMhB,c;UAGSD,O;;;KAHTC,c","sourcesContent":["import React, {useState, useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nexport const AddTransaction = () => {\r\n    const [text,setText] = useState('');\r\n    const [amount,setAmount] = useState(0);\r\n    const { reset } = useForm();\r\n\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text,\r\n      amount: +amount\r\n    }\r\n\r\n    addTransaction(newTransaction);\r\n    e.target.reset();\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <h3>Add new transaction</h3>\r\n        <form onSubmit={onSubmit}>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"text\">Text</label>\r\n            <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...(Optional)\" />\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"amount\"\r\n              >Amount <br />\r\n              (negative - expense, positive - income)</label\r\n            >\r\n            <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n          </div>\r\n          <button className=\"btn\">Add transaction</button>\r\n        </form>\r\n      </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}